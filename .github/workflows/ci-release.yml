name: CI

on:
  pull_request:
    types:
      - closed
    branches:
      - release/*
env:
  SOLUTION_FILE_PATH: .

jobs:
  version:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.merge_commit_sha }}
        fetch-depth: '0'

    - name: Fetch ${{ github.event.pull_request.base.ref }}
      run: |
        git branch ${{ github.event.pull_request.base.ref }} origin/${{ github.event.pull_request.base.ref }}
        git branch
        git branch -r

    - name: Extract major version from release branch
      if: startsWith(github.event.pull_request.base.ref, 'release/')
      run: |
        export MajorVersion=$(echo ${GITHUB_REF#refs/heads/release/v} | cut -d/ -f1)
        export InitialVersion="${MajorVersion}.0.0"
        echo "InitialVersion=$InitialVersion" >> $GITHUB_ENV

    - name: Generate release version
      id: release-version
      if: startsWith(github.event.pull_request.base.ref, 'release/')
      uses: anothrNick/github-tag-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        TAG_CONTEXT: branch
        DEFAULT_BRANCH: ${{ github.event.pull_request.base.ref }}
        INITIAL_VERSION: ${{ env.InitialVersion }}
        RELEASE_BRANCHES: release/*
        VERBOSE: true

    - name: Determine version
      id: version
      run: |
        echo "version=${{ steps.release-version.outputs.new_tag }}" >> $GITHUB_OUTPUT

  build:
    uses: ./.github/workflows/_build.yml
    needs: 
      - version
    permissions:
      checks: write
    with:
      version: ${{ needs.version.outputs.version }}
  
